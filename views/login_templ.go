// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Login() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"ko\"><head>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Header().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script src=\"https://www.gstatic.com/firebasejs/10.0.0/firebase-app-compat.js\"></script><script src=\"https://www.gstatic.com/firebasejs/10.0.0/firebase-auth-compat.js\"></script><script src=\"https://www.gstatic.com/firebasejs/ui/6.1.0/firebase-ui-auth.js\"></script><link type=\"text/css\" rel=\"stylesheet\" href=\"https://www.gstatic.com/firebasejs/ui/6.1.0/firebase-ui-auth.css\"></head><body><div class=\"container p-3\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Navi().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"card\"><header class=\"card-header\"><p class=\"card-header-title\">로그인</p><button class=\"card-header-icon\" aria-label=\"more options\"><span class=\"icon\"><i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i></span></button></header><div class=\"p-5\" id=\"firebaseui-auth-container\"></div><div class=\"p-5\" id=\"loader\">Loading...</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = FirebaseWebUI().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func FirebaseWebUI() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_FirebaseWebUI_3f27`,
		Function: `function __templ_FirebaseWebUI_3f27(){const firebaseConfig = {
      apiKey: "AIzaSyCWIebyvcBiwWchfYGUegHf22c9nlBEOWQ",
      authDomain: "warm-braid-383411.firebaseapp.com",
      projectId: "warm-braid-383411",
      storageBucket: "warm-braid-383411.firebasestorage.app",
      messagingSenderId: "1001293129594",
      appId: "1:1001293129594:web:a579e07714a18ec3b598c3"
    };

    firebase.initializeApp(firebaseConfig);

    const uiConfig = {
        // 로그인 성공 시 이동할 URL, 혹은 자동 리다이렉트를 막을 수도 있음
        signInFlow : "popup",
        signInSuccessUrl: "/",
        signInOptions: [
            // 이메일 + 비밀번호 로그인
            firebase.auth.EmailAuthProvider.PROVIDER_ID,
            // 소셜 로그인 예시 (Google)
            firebase.auth.GoogleAuthProvider.PROVIDER_ID,
        ],
        callbacks: {
            signInSuccessWithAuthResult: function (authResult, redirectUrl) {
                console.log("로그인 성공:", authResult.user);
                // return false로 하면 signInSuccessUrl로 리다이렉트 안 함
                return true;
            },
            signInFailure: function(error) {
                // Some unrecoverable error occurred during sign-in.
                // Return a promise when error handling is completed and FirebaseUI
                // will reset, clearing any UI. This commonly occurs for error code
                // 'firebaseui/anonymous-upgrade-merge-conflict' when merge conflict
                // occurs. Check below for more details on this.
                return handleUIError(error);
            },
            uiShown: function() {
                // The widget is rendered.
                // Hide the loader.
                document.getElementById('loader').style.display = 'none';
            }
        },
    }; 

    // (7) FirebaseUI 인스턴스 생성 및 초기화
    const ui = new firebaseui.auth.AuthUI(firebase.auth());
    ui.start("#firebaseui-auth-container", uiConfig);
}`,
		Call:       templ.SafeScript(`__templ_FirebaseWebUI_3f27`),
		CallInline: templ.SafeScriptInline(`__templ_FirebaseWebUI_3f27`),
	}
}

var _ = templruntime.GeneratedTemplate
